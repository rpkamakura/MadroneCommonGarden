##Elevation
longelev <- ggplot(locandclim, aes(y=Elevation, x=Longitude)) + geom_point() +
geom_point(data=cg_locandclim, shape=17, size = 3, color = "white") +
geom_text(data=cg_locandclim, label=c("SO", "SF", "", ""), hjust=-1, color = "red") + xlab("Longitude (?E)") + ylab("Elevation (m)")
#MSP
longmsp <- ggplot(locandclim, aes(y=MSP, x=Longitude)) + geom_point() +
geom_point(data=cg_locandclim, shape=17, size = 3, color = "white") +
geom_text(data=cg_locandclim, label=c("SO", "SF", "", ""), hjust=-1, color = "red") + xlab("Longitude (?E)") + ylab("Mean Summer Precipitation (mm)")
##bFFP/eFFP
bandeFFP <- ggplot(locandclim, aes(y=eFFP, x=bFFP)) + geom_point() +
geom_point(data=cg_locandclim, shape=17, size = 3, color = "white") +
geom_text(data=cg_locandclim, label=c("SO", "SF", "", ""), hjust=-1, vjust = -1, color = "red") +
xlab("bFFP (days after Jan. 1)") + ylab("eFFP (days after Jan. 1)")
latlong
longelev
bandeFFP #PV is further to the left and slightly higher
longmsp
##Need to add PV and PH to the plots
##3D plot?
combloc <- plot_ly(x=locandclim$Longitude, y=locandclim$Latitude, z=locandclim$Elevation, type="scatter3d", mode="markers")
latlongelev <- ggplot(locandclim, aes(y=Latitude, x=Longitude, color=Elevation)) + geom_point() +
geom_point(data=cg_locandclim, shape=17, size = 3) +
geom_text(data=cg_locandclim, label=c("SO", "SF", "PY", ""), hjust=-1, color = "red") + xlab("Longitude (?E)") + ylab("Latitude (?N)") + scale_colour_gradient(low = "white", high = "black")
#Just MSP
msp_hist <- ggplot(locandclim, aes (x=MSP)) +
geom_histogram(binwidth=10, color="black", fill="white") +
geom_vline(aes(xintercept=86),
color= "#6d6e6e", linetype="dashed", size=1) +
geom_vline(aes(xintercept=193),
color="#bbbdbd", linetype="dashed", size=1) +
geom_vline(aes(xintercept=182),
color="#b5b5b5", linetype="dashed", size=1) +
geom_vline(aes(xintercept=189),
color="#141414", linetype="dashed", size=1) +
xlab("Mean Summer Precipitation (mm)") +
ylab("Frequency")
combloc <- plot_ly(x=locandclim$Longitude, y=locandclim$Latitude, z=locandclim$Elevation, type="scatter3d", mode="markers")
latlongelev <- ggplot(locandclim, aes(y=Latitude, x=Longitude, color=Elevation)) + geom_point() +
geom_point(data=cg_locandclim, shape=17, size = 3) +
geom_text(data=cg_locandclim, label=c("SO", "SF", "PY", ""), hjust=-1, color = "red") + xlab("Longitude (?E)") + ylab("Latitude (?N)") + scale_colour_gradient(low = "white", high = "black")
combloc
latlongelev
#GrowthRates should have already been created
Mortdata <- IndivCond_final(sitesdata, sites)
GRlen <- 0
Mortlen <- 0
for (st in 1:length(GrowthRates)){
GRlen <- GRlen + length(GrowthRates[[st]][,1])
Mortlen <- Mortlen + length(Mortdata[[st]][,1])
}
for (st in 1:length(GrowthRates)){
if (st==1){
curr_len <- length(GrowthRates[[st]][,1])
#Overall Model Matrix
o_cols <- c("Site", "Block","Tree", "Name", "Source", "Ecoregion", "TotGrowth", "AmntDieback")
gr_mod <- as.data.frame(matrix(NA, nrow = GRlen, ncol = length(o_cols)))
colnames(gr_mod) <- o_cols
gr_mod[1:curr_len,1] <- rep(names(GrowthRates)[st], curr_len)
gr_mod[1:curr_len,2] <- GrowthRates[[st]][,5]
gr_mod[1:curr_len,3] <- GrowthRates[[st]][,6]
gr_mod[1:curr_len,4] <- GrowthRates[[st]][,4]
gr_mod[1:curr_len,5] <- GrowthRates[[st]][,3]
gr_mod[1:curr_len,6] <- GrowthRates[[st]][,2]
gr_mod[1:curr_len,7] <- GrowthRates[[st]][,7]
gr_mod[1:curr_len,8] <- GrowthRates[[st]][,9]
prev_end <- curr_len
} else { #depending on which site you're on
curr_len <- length(GrowthRates[[st]][,1])
curr_end <- prev_end + curr_len
##gr Matrix
gr_mod[(prev_end + 1):curr_end,1] <- rep(names(GrowthRates)[st], curr_len)
gr_mod[(prev_end + 1):curr_end,2] <- GrowthRates[[st]][,5]
gr_mod[(prev_end + 1):curr_end,3] <- GrowthRates[[st]][,6]
gr_mod[(prev_end + 1):curr_end,4] <- GrowthRates[[st]][,4]
gr_mod[(prev_end + 1):curr_end,5] <- GrowthRates[[st]][,3]
gr_mod[(prev_end + 1):curr_end,6] <- GrowthRates[[st]][,2]
gr_mod[(prev_end + 1):curr_end,7] <- GrowthRates[[st]][,7]
gr_mod[(prev_end + 1):curr_end,8] <- GrowthRates[[st]][,9]
prev_end <- curr_end
} #depending on which site you're on
}
##################MORTALITY DATA
for (st in 1:length(Mortdata)){
if (st==1){
curr_len <- length(Mortdata[[st]][,1])
o_cols <- c("Site", "Block", "Name","Source", "Ecoregion", "PercDead")
mort_mod <- as.data.frame(matrix(NA, nrow = Mortlen, ncol = length(o_cols)))
colnames(mort_mod) <- o_cols
mort_mod[1:curr_len,1] <- rep(names(Mortdata)[st], curr_len)
mort_mod[1:curr_len,2] <- Mortdata[[st]][,1]
mort_mod[1:curr_len,3] <- Mortdata[[st]][,2]
mort_mod[1:curr_len,4] <- Mortdata[[st]][,3]
mort_mod[1:curr_len,5] <- Mortdata[[st]][,7]
mort_mod[1:curr_len,6] <- Mortdata[[st]][,6]
prev_end <- curr_len
} else { #depending on which site you're on
curr_len <- length(Mortdata[[st]][,1])
curr_end <- prev_end + curr_len
##Overall Matrix
mort_mod[(prev_end + 1):curr_end,1] <- rep(names(Mortdata)[st], curr_len)
mort_mod[(prev_end + 1):curr_end,2] <- Mortdata[[st]][,1]
mort_mod[(prev_end + 1):curr_end,3] <- Mortdata[[st]][,2]
mort_mod[(prev_end + 1):curr_end,4] <- Mortdata[[st]][,3]
mort_mod[(prev_end + 1):curr_end,5] <- Mortdata[[st]][,7]
mort_mod[(prev_end + 1):curr_end,6] <- Mortdata[[st]][,6]
prev_end <- curr_end
} #depending on which site you're on
}
#Mortality
mort_plot <- ggplot(mort_mod, aes(y=PercDead, x=Site)) + geom_boxplot() +
xlab("Site") + ylab("Mortality (fraction of trees per family)")
ft_mort <- aov(PercDead ~ Site, data=mort_mod)
pairwise_mort <- TukeyHSD(ft_mort)[[1]]
mort_plot #just so you can see it
pairwise_mort
#The means themselves
mean(na.omit(mort_mod$PercDead[mort_mod$Site=="PuyallupHill"]))
mean(na.omit(mort_mod$PercDead[mort_mod$Site=="PuyallupValley"]))
mean(na.omit(mort_mod$PercDead[mort_mod$Site=="Starker"]))
mean(na.omit(mort_mod$PercDead[mort_mod$Site=="Sprague"]))
#Total Growth
tg_plot <- ggplot(gr_mod, aes(y=TotGrowth, x=Site)) + geom_boxplot() +
xlab("Site") + ylab("Overall Growth %")
ft_tg <- aov(TotGrowth~ Site, data=gr_mod)
pairwise_tg <- TukeyHSD(ft_tg)[[1]]
tg_plot #just so you can see it
pairwise_tg
#The means themselves
mean(na.omit(gr_mod$TotGrowth[gr_mod$Site=="PuyallupHill"]))
mean(na.omit(gr_mod$TotGrowth[gr_mod$Site=="PuyallupValley"]))
mean(na.omit(gr_mod$TotGrowth[gr_mod$Site=="Starker"]))
mean(na.omit(gr_mod$TotGrowth[gr_mod$Site=="Sprague"]))
#Dieback
dbk_plot <- ggplot(gr_mod, aes(y=AmntDieback, x=Site)) + geom_boxplot() +
xlab("Site") + ylab("Total Dieback %")
ft_dbk <- aov(AmntDieback ~ Site, data=gr_mod)
pairwise_dbk <- TukeyHSD(ft_dbk)[[1]]
dbk_plot #just so you can see it
pairwise_dbk
#The means themselves
mean(gr_mod$AmntDieback[gr_mod$Site=="PuyallupHill"])
mean(gr_mod$AmntDieback[gr_mod$Site=="PuyallupValley"])
mean(gr_mod$AmntDieback[gr_mod$Site=="Starker"])
mean(gr_mod$AmntDieback[gr_mod$Site=="Sprague"])
##linear regression
b_eFFP <- lm(eFFP ~ bFFP, locandclim)
b_FFP <- lm(FFP ~ bFFP, locandclim)
e_FFP <- lm(FFP ~ eFFP, locandclim)
summary(b_eFFP)
summary(b_FFP)
summary(e_FFP)
plot(locandclim$bFFP, locandclim$eFFP, xlab="Start of Frost Free Period (Julian date)", ylab= "End of Frost Free Period (Julian date)")
abline(lm(eFFP ~ bFFP, locandclim), col="grey")
plot(locandclim$bFFP, locandclim$FFP, xlab="Start of Frost Free Period (Julian date)", ylab= "Length of Frost Free Period (days)")
abline(lm(FFP ~ bFFP, locandclim), col="grey")
plot(locandclim$eFFP, locandclim$FFP, ylab="Length of Frost Free Period (days)", xlab= "End of Frost Free Period (Julian date)")
abline(lm(FFP ~ eFFP, locandclim), col="grey")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
library(dplyr)
library(nlme)
library(psychometric)
library(MASS)
library(gnm)
library(data.table)
library(sjPlot)
library(lme4)
library(gridExtra)
library(cluster)
library(factoextra)
library(ecodist)
library(GLMMadaptive)
library(ggpubr)
#pull in code to get growth, dieback, and mortality
source("../04ProcessingCode/BackgroundFunctions/AnalysisFunctions_GRMort.R")
options(stringsAsFactors = FALSE)
#Names
years <- c(12, 13, 14, 15)
#sites <- c("PuyallupHill","PuyallupValley", "Starker", "Sprague")
sites <- c("PH", "PV", "SF", "SO")
#Ecoregion data
ecoregdat <- read.csv("../02Lvl1Processed/EcoregionData.csv")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
library(dplyr)
library(nlme)
library(psychometric)
library(MASS)
library(gnm)
library(data.table)
library(sjPlot)
library(lme4)
library(gridExtra)
library(cluster)
library(factoextra)
library(ecodist)
library(GLMMadaptive)
library(ggpubr)
#pull in code to get growth, dieback, and mortality
source("../04ProcessingCode/BackgroundFunctions/AnalysisFunctions_GRMort.R")
options(stringsAsFactors = FALSE)
#Names
years <- c(12, 13, 14, 15)
#sites <- c("PuyallupHill","PuyallupValley", "Starker", "Sprague")
sites <- c("PH", "PV", "SF", "SO")
#Ecoregion data
ecoregdat <- read.csv("../01ExampleRawData/02LocationData/EcoregionData.csv")
ecoregions <- unique(ecoregdat$EcoregionShort)
#Sources
sources <- unique(ecoregdat$Source)
##Get the full data files
pertfiles <- list("../03ExampleCleanedData/PVFulldata.csv", "../03ExampleCleanedData/PHFulldata.csv", "../03ExampleCleanedData/SFFulldata.csv", "../03ExampleCleanedData/SOFulldata.csv")
sitesdata <- lapply(pertfiles,read.csv)
names(sitesdata) <- sites
##Baseline datasets
##order is BL, PH, PV, PY, SF, SO
eco_base <- c("CORA", "PULO", "PULO", "PULO", "WIVA", "KLMT")
bFFP_base <- c(16, 84, 81, 82.5, 96, 110)
GrowthRates = IndivHeights_byTree(sitesdata, years, sites)
##Puyallup Hill -- Dist, eFFP
PH <- GrowthRates[[1]]
PH <- PH[!is.na(PH$TotGrowth),] ##need to fix this in the function
PH_bFFP <- ggplot(PH, aes(x=eFFP, y=TotGrowth)) +
geom_point(size = 3) +
geom_smooth(method="lm",formula = y ~ x + I(x^2), color='grey')
PH_Eco <- ggplot(PH, aes(x=Ecoregion, y=TotGrowth)) +
geom_boxplot()
print(PH_Eco)
print(PH_bFFP)
##Puyallup Valley -- Ecoregion, Dist, eFFP
PV <- GrowthRates[[2]]
PV <- PV[!is.na(PV$TotGrowth),] ##need to fix this in the function
PV_bFFP <- ggplot(PV, aes(x=bFFP, y=TotGrowth)) +
geom_point(size = 3) +
geom_smooth(method="lm",formula = y ~ x + I(x^2), color='grey')
PV_Eco <- ggplot(PV, aes(x=Ecoregion, y=TotGrowth)) +
geom_boxplot()
print(PV_Eco)
print(PV_bFFP)
head(SO)
head(PC)
head(PV)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
library(dplyr)
library(nlme)
library(psychometric)
library(MASS)
library(gnm)
library(data.table)
library(sjPlot)
library(lme4)
library(gridExtra)
library(cluster)
library(factoextra)
library(ecodist)
library(GLMMadaptive)
library(ggpubr)
#pull in code to get growth, dieback, and mortality
source("../04ProcessingCode/BackgroundFunctions/AnalysisFunctions_GRMort.R")
options(stringsAsFactors = FALSE)
#Names
years <- c(12, 13, 14, 15)
#sites <- c("PuyallupHill","PuyallupValley", "Starker", "Sprague")
sites <- c("PH", "PV", "SF", "SO")
#Ecoregion data
ecoregdat <- read.csv("../01ExampleRawData/02LocationData/EcoregionData.csv")
ecoregions <- unique(ecoregdat$EcoregionShort)
#Sources
sources <- unique(ecoregdat$Source)
##Get the full data files
pertfiles <- list("../03ExampleCleanedData/PVFulldata.csv", "../03ExampleCleanedData/PHFulldata.csv", "../03ExampleCleanedData/SFFulldata.csv", "../03ExampleCleanedData/SOFulldata.csv")
sitesdata <- lapply(pertfiles,read.csv)
names(sitesdata) <- sites
##Baseline datasets
##order is BL, PH, PV, PY, SF, SO
eco_base <- c("CORA", "PULO", "PULO", "PULO", "WIVA", "KLMT")
eFFP_base <- c(16, 84, 81, 82.5, 96, 110)
GrowthRates = IndivHeights_byTree(sitesdata, years, sites)
##Puyallup Hill -- Dist, eFFP
PH <- GrowthRates[[1]]
PH <- PH[!is.na(PH$TotGrowth),] ##need to fix this in the function
PH_eFFP <- ggplot(PH, aes(x=eFFP, y=TotGrowth)) +
geom_point(size = 3) +
geom_smooth(method="lm",formula = y ~ x + I(x^2), color='grey')
PH_Eco <- ggplot(PH, aes(x=Ecoregion, y=TotGrowth)) +
geom_boxplot()
print(PH_Eco)
print(PH_eFFP)
##Puyallup Valley -- Ecoregion, Dist, eFFP
PV <- GrowthRates[[2]]
PV <- PV[!is.na(PV$TotGrowth),] ##need to fix this in the function
PV_eFFP <- ggplot(PV, aes(x=eFFP, y=TotGrowth)) +
geom_point(size = 3) +
geom_smooth(method="lm",formula = y ~ x + I(x^2), color='grey')
PV_Eco <- ggplot(PV, aes(x=Ecoregion, y=TotGrowth)) +
geom_boxplot()
print(PV_Eco)
print(PV_eFFP)
##Starker Forest -- Ecoregion, Dist, Slipe, Aspect, eFFP, MSP, DD5_sp
SF <- GrowthRates[[3]]
SF <- SF[!is.na(SF$TotGrowth),] ##need to fix this in the function
SF_Eco <- ggplot(SF, aes(x=Ecoregion, y=TotGrowth)) +
geom_boxplot()
SF_Dist <- ggplot(SF, aes(x=Dist, y=TotGrowth)) +
geom_point(size = 3) +
geom_smooth(method="lm", color='grey')
SF_eFFP <- ggplot(SF, aes(x=eFFP, y=TotGrowth)) +
geom_point(size = 3) +
geom_smooth(method="lm",formula = y ~ x + I(x^2), color='grey')
print(SF_Eco)
print(SF_Dist)
print(SF_eFFP)
##Sprague Orchard -- Ecoregion, ElevDist
SO <- GrowthRates[[4]]
SO <- SO[!is.na(SO$TotGrowth),] ##need to fix this in the function
SO_Eco <- ggplot(SO, aes(x=Ecoregion, y=TotGrowth)) +
geom_boxplot()
SO_Dist <- ggplot(SO, aes(x=Dist, y=TotGrowth)) +
geom_point(size = 3) +
geom_smooth(method="lm", color='grey')
SO_eFFP <- ggplot(SO, aes(x=eFFP, y=TotGrowth)) +
geom_point(size = 3) +
geom_smooth(method="lm",formula = y ~ x + I(x^2), color='grey')
print(SO_Eco)
print(SO_Dist)
print(SO_eFFP)
##Averages - if you want it to be a series of boxplots, you'd need to combine all the sitesdata
totData <- rbindlist(GrowthRates)
Overall_TG <- ggplot(totData, aes(x=Site, y=TotGrowth)) +
geom_boxplot() + scale_x_discrete(name = "Common Garden Site") +
scale_y_continuous(name = "Overall Growth (mm)") + theme_bw()
Overall_DBK <- ggplot(totData, aes(x=Site, y=AmntDieback)) +
geom_boxplot()
print(Overall_TG)
print(Overall_DBK)
fit_tg <- aov(TotGrowth ~ Site, data=totData)
pairwise_tg <- TukeyHSD(fit_tg)[[1]] ##The problem is that this printout is monstrous
sig05_pair_tg <- pairwise_tg[pairwise_tg[,4] < 0.05,] #just the ones under 0.05
fit_dbk <- pairwise.wilcox.test(totData$AmntDieback, totData$Site,
p.adjust.method = "BH")
#fit_dbk <- aov(AmntDieback ~ Site, data=totData)
#pairwise_dbk <- TukeyHSD(fit_dbk)[[1]] ##The problem is that this printout is monstrous
#sig05_pair_dbk <- pairwise_dbk[pairwise_dbk[,4] < 0.05,] #just the ones under 0.05
my_comparisons <- list( c("PH", "PV"), c("PH", "SF"), c("PH", "SO"), c("PV", "SF"), c("PV", "SO"), c("SF", "SO"))
#stat_compare_means(comparisons = my_comparisons, method = "anova")+ # Add pairwise comparisons p-value
#  stat_compare_means(label.y = 50)
totData <- rbindlist(GrowthRates)
Overall_TG <- ggplot(totData, aes(x=Site, y=TotGrowth)) +
geom_boxplot() + scale_x_discrete(name = "Common Garden Site") +
scale_y_continuous(name = "Overall Growth (cm)") + scale_fill_brewer(palette="YlGnBu") +
ggtitle("A") +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test", label = "p.signif", label.y = c(300, 325, 350, 375, 400, 425))
print(Overall_TG)
fit_tg <- aov(TotGrowth ~ Site, data=totData)
pairwise_tg <- TukeyHSD(fit_tg)
##eFFP_func <- function(x){-0.001*x^2 + 0.0467*x}
#curve(eFFP_func, 0, 180)
#Mortality
condata <- IndivCond_final(sitesdata, sites)
totMData <- rbindlist(condata)
fit_mort <- aov(PercDead ~ Site, data=totMData)
pairwise_mort <- TukeyHSD(fit_mort)
Overall_mort <- ggplot(totMData, aes(x=Site, y=PercDead*100)) +
geom_boxplot() + scale_x_discrete(name = "Common Garden Site") +
scale_y_continuous(name = "Percent Mortality") + scale_fill_brewer(palette="YlGnBu") +
ggtitle("B")  +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test", label = "p.signif", label.y = c(100, 110, 120, 130, 140, 150))
print(Overall_mort)
grid.arrange(Overall_TG, Overall_mort, nrow = 1)
#Dieback
Overall_DBK <- ggplot(totData, aes(x=Site, y=AmntDieback)) +
geom_boxplot() + scale_x_discrete(name = "Common Garden Site") +
scale_y_continuous(name = "Overall Growth (cm)") + scale_fill_brewer(palette="YlGnBu") +
ggtitle("A") +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test", label = "p.signif", label.y = c(300, 325, 350, 375, 400, 425))
print(Overall_DBK)
GrowthRates = IndivHeights_byTree(sitesdata, years, sites)
PH <- GrowthRates[[1]]
PV <- GrowthRates[[2]]
SF <- GrowthRates[[3]]
SO <- GrowthRates[[4]]
ctrl <- lmeControl(opt='optim')
##PH: Dist, eFFP
PH$eFFP2 <- (PH$eFFP)^2
PH$Ecoregion <- relevel(as.factor(PH$Ecoregion), ref="PULO")
PH_reg <- lme(TotGrowth ~ Dist + eFFP + eFFP2, random = ~1|Block, data = PH, na.action = na.omit, control = ctrl, method="ML")
PH_est <- plot_model(PH_reg, colors = "bw", show.values = TRUE, value.offset =0.4, vline.color = "#E4E3E3", title = "A", digits = 3) + theme_sjplot()
##PV: Ecoregion, Dist, eFFP
PV$eFFP2 <- (PV$eFFP)^2
PV$Ecoregion <- relevel(as.factor(PV$Ecoregion), ref="PULO")
PV_reg <- lme(TotGrowth ~ Ecoregion + Dist + eFFP + eFFP2, random = ~1|Block, data = PV, na.action = na.omit, control = ctrl, method="ML")
PV_est <- plot_model(PV_reg, colors = "bw", show.values = TRUE, value.offset =0.4, vline.color = "#E4E3E3", title = "B", digits = 3) + theme_sjplot()
##SF: Ecoregion, Dist, Slope, Apsect, eFFP, MSP, DD5_sp
SF$Slope2 <- (SF$Slope)^2
SF$eFFP2 <- (SF$eFFP)^2
SF$MSP2 <- (SF$MSP)^2
SF$DD.5.sp2 <- (SF$DD.5.sp)^2
SF$Aspect2 <- (SF$Aspect)^2
SF$Ecoregion <- relevel(as.factor(SF$Ecoregion), ref="WIVA")
SF_reg <- lme(TotGrowth ~ Ecoregion + Dist + Slope + Slope2 + Aspect + Aspect2 + eFFP + eFFP2 + MSP + MSP2 + DD.5.sp + DD.5.sp2, random = ~1|Block, data = SF, na.action = na.omit, control = ctrl, method="ML")
SF_est <- plot_model(SF_reg, colors = "bw", show.values = TRUE, value.offset =0.4, vline.color = "#E4E3E3", title = "C", digits = 3) + theme_sjplot()
##SO: eFFP, MSP, DD5_sp
SO$eFFP2 <- (SO$eFFP)^2
SO$MSP2 <- (SO$MSP)^2
SO$DD.5.sp2 <- (SO$DD.5.sp)^2
SO$Ecoregion <- relevel(as.factor(SO$Ecoregion), ref="KLMT")
SO_reg <- lme(TotGrowth ~ eFFP + eFFP2 + MSP + MSP2 + DD.5.sp + DD.5.sp2, random = ~1|Block, data = SO, na.action = na.omit, control = ctrl, method="ML")
SO_est <- plot_model(SO_reg, colors = "bw", show.values = TRUE, value.offset =0.4, vline.color = "#E4E3E3", title = "D", digits = 3) + theme_sjplot()
grid.arrange(PH_est, PV_est, SF_est, SO_est, nrow = 2)
colnms <- c("Site", "Dep_Var", "Indep_Var", "Estimate", "Stdev", "Pval", "Corr_Pval")
num_rws <- 3 +9 + 17 + 6
storage_mat <- as.data.frame(matrix(0, nrow=num_rws, ncol=length(colnms)))
names(storage_mat) <- colnms
PH_rws <- 1:3
PV_rws <- 4:12
SF_rws <- 13:29
SO_rws <- 30:35
storage_mat$Dep_Var <- rep("Growth", num_rws)
storage_mat$Site[PH_rws] <- rep("PH", 3)
storage_mat$Indep_Var[PH_rws] <- rownames(summary(PH_reg)$tTable)[c(2:5)]
storage_mat$Estimate[PH_rws] <- summary(PH_reg)$tTable[c(2:4), 1]
storage_mat$Stdev[PH_rws] <- summary(PH_reg)$tTable[c(2:4), 2]
storage_mat$Pval[PH_rws] <- summary(PH_reg)$tTable[c(2:4), 5]
storage_mat$Site[PV_rws] <- rep("PV", 9)
storage_mat$Indep_Var[PV_rws] <- rownames(summary(PV_reg)$tTable)[c(2:10)]
storage_mat$Estimate[PV_rws] <- summary(PV_reg)$tTable[c(2:10), 1]
storage_mat$Stdev[PV_rws] <- summary(PV_reg)$tTable[c(2:10), 2]
storage_mat$Pval[PV_rws] <- summary(PV_reg)$tTable[c(2:10), 5]
storage_mat$Site[SF_rws] <- rep("SF", 17)
storage_mat$Indep_Var[SF_rws] <- rownames(summary(SF_reg)$tTable)[c(2:18)]
storage_mat$Estimate[SF_rws] <- summary(SF_reg)$tTable[c(2:18), 1]
storage_mat$Stdev[SF_rws] <- summary(SF_reg)$tTable[c(2:18), 2]
storage_mat$Pval[SF_rws] <- summary(SF_reg)$tTable[c(2:18), 5]
storage_mat$Site[SO_rws] <- rep("SO",6)
storage_mat$Indep_Var[SO_rws] <- rownames(summary(SO_reg)$tTable)[c(2:7)]
storage_mat$Estimate[SO_rws] <- summary(SO_reg)$tTable[c(2:7), 1]
storage_mat$Stdev[SO_rws] <- summary(SO_reg)$tTable[c(2:7), 2]
storage_mat$Pval[SO_rws] <- summary(SO_reg)$tTable[c(2:7), 5]
##bonferroni corrections
storage_mat$Corr_Pval <- p.adjust(storage_mat$Pval, method = "bonferroni", n = length(storage_mat$Pval))
write.csv(storage_mat, "../04Lvl2Processed/060821growth_estimates.csv")
write.csv(storage_mat, "../05ProcessedDataOutputs/Growth_estimates.csv")
my_comparisons <- list( c("PH", "PV"), c("PH", "SF"), c("PH", "SO"), c("PV", "SF"), c("PV", "SO"), c("SF", "SO"))
#stat_compare_means(comparisons = my_comparisons, method = "anova")+ # Add pairwise comparisons p-value
#  stat_compare_means(label.y = 50)
totData <- rbindlist(GrowthRates)
Overall_TG <- ggplot(totData, aes(x=Site, y=TotGrowth)) +
geom_boxplot() + scale_x_discrete(name = "Common Garden Site") +
scale_y_continuous(name = "Overall Growth (cm)") + scale_fill_brewer(palette="YlGnBu") +
ggtitle("A") +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test", label = "p.signif", label.y = c(300, 325, 350, 375, 400, 425))
print(Overall_TG)
fit_tg <- aov(TotGrowth ~ Site, data=totData)
pairwise_tg <- TukeyHSD(fit_tg)
##eFFP_func <- function(x){-0.001*x^2 + 0.0467*x}
#curve(eFFP_func, 0, 180)
#Mortality
condata <- IndivCond_final(sitesdata, sites)
totMData <- rbindlist(condata)
fit_mort <- aov(PercDead ~ Site, data=totMData)
pairwise_mort <- TukeyHSD(fit_mort)
Overall_mort <- ggplot(totMData, aes(x=Site, y=PercDead*100)) +
geom_boxplot() + scale_x_discrete(name = "Common Garden Site") +
scale_y_continuous(name = "Percent Mortality") + scale_fill_brewer(palette="YlGnBu") +
ggtitle("B")  +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test", label = "p.signif", label.y = c(100, 110, 120, 130, 140, 150))
print(Overall_mort)
grid.arrange(Overall_TG, Overall_mort, nrow = 1)
#Dieback
Overall_DBK <- ggplot(totData, aes(x=Site, y=AmntDieback)) +
geom_boxplot() + scale_x_discrete(name = "Common Garden Site") +
scale_y_continuous(name = "Overall Growth (cm)") + scale_fill_brewer(palette="YlGnBu") +
ggtitle("A") +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test", label = "p.signif", label.y = c(300, 325, 350, 375, 400, 425))
print(Overall_DBK)
GrowthRates = IndivHeights_byTree(sitesdata, years, sites)
PH <- GrowthRates[[1]]
PV <- GrowthRates[[2]]
SF <- GrowthRates[[3]]
SO <- GrowthRates[[4]]
ctrl <- lmeControl(opt='optim')
##PH: Dist, eFFP
PH$eFFP2 <- (PH$eFFP)^2
PH$Ecoregion <- relevel(as.factor(PH$Ecoregion), ref="PULO")
PH_reg <- lme(TotGrowth ~ Dist + eFFP + eFFP2, random = ~1|Block, data = PH, na.action = na.omit, control = ctrl, method="ML")
PH_est <- plot_model(PH_reg, colors = "bw", show.values = TRUE, value.offset =0.4, vline.color = "#E4E3E3", title = "A", digits = 3) + theme_sjplot()
##PV: Ecoregion, Dist, eFFP
PV$eFFP2 <- (PV$eFFP)^2
PV$Ecoregion <- relevel(as.factor(PV$Ecoregion), ref="PULO")
PV_reg <- lme(TotGrowth ~ Ecoregion + Dist + eFFP + eFFP2, random = ~1|Block, data = PV, na.action = na.omit, control = ctrl, method="ML")
PV_est <- plot_model(PV_reg, colors = "bw", show.values = TRUE, value.offset =0.4, vline.color = "#E4E3E3", title = "B", digits = 3) + theme_sjplot()
##SF: Ecoregion, Dist, Slope, Apsect, eFFP, MSP, DD5_sp
SF$Slope2 <- (SF$Slope)^2
SF$eFFP2 <- (SF$eFFP)^2
SF$MSP2 <- (SF$MSP)^2
SF$DD.5.sp2 <- (SF$DD.5.sp)^2
SF$Aspect2 <- (SF$Aspect)^2
SF$Ecoregion <- relevel(as.factor(SF$Ecoregion), ref="WIVA")
SF_reg <- lme(TotGrowth ~ Ecoregion + Dist + Slope + Slope2 + Aspect + Aspect2 + eFFP + eFFP2 + MSP + MSP2 + DD.5.sp + DD.5.sp2, random = ~1|Block, data = SF, na.action = na.omit, control = ctrl, method="ML")
SF_est <- plot_model(SF_reg, colors = "bw", show.values = TRUE, value.offset =0.4, vline.color = "#E4E3E3", title = "C", digits = 3) + theme_sjplot()
##SO: eFFP, MSP, DD5_sp
SO$eFFP2 <- (SO$eFFP)^2
SO$MSP2 <- (SO$MSP)^2
SO$DD.5.sp2 <- (SO$DD.5.sp)^2
SO$Ecoregion <- relevel(as.factor(SO$Ecoregion), ref="KLMT")
SO_reg <- lme(TotGrowth ~ eFFP + eFFP2 + MSP + MSP2 + DD.5.sp + DD.5.sp2, random = ~1|Block, data = SO, na.action = na.omit, control = ctrl, method="ML")
SO_est <- plot_model(SO_reg, colors = "bw", show.values = TRUE, value.offset =0.4, vline.color = "#E4E3E3", title = "D", digits = 3) + theme_sjplot()
grid.arrange(PH_est, PV_est, SF_est, SO_est, nrow = 2)
